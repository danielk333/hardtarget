name: Linting and Testing

# Run this workflow on any push or pull request to the main branch
on:
  push:
    branches:
      - dev/ingar
  pull_request:
    branches:
      - dev/ingar

jobs:

    setup-venv:
        runs-on: ubuntu-latest
        steps:
        -   name: Check out code
            uses: actions/checkout@v4

        -   name: Set up Python
            uses: actions/setup-python@v5
            with:
                python-version: '3.x'

        # Attempt to restore the venv cache
        -   name: Cache virtual environment
            id: venv-cache
            uses: actions/cache@v4
            with:
                path: venv   # The directory where venv will be stored
                key: venv-${{ hashFiles('setup.cfg') }}
            
        # Only create the venv if the cache is missing
        -   name: Install dependencies if cache is missing
            if: steps.venv-cache.outputs.cache-hit != 'true'
            run: |
                sudo apt-get update
                sudo apt-get install -y gcc libfftw3-dev libhdf5-dev
                python -m venv venv
                source venv/bin/activate
                pip install --upgrade pip
                pip install .[develop]

        # Save to cache if we just created the venv
        -   name: Save venv to cache
            if: steps.venv-cache.outputs.cache-hit != 'true'
            uses: actions/cache@v4
            with:
                path: venv
                key: venv-${{ hashFiles('setup.cfg') }}


    lint-and-test:
        runs-on: ubuntu-latest
        needs: setup-venv

        steps:
        -   name: Check out code
            uses: actions/checkout@v4

        -   name: Set up Python
            uses: actions/setup-python@v5
            with:
                python-version: '3.x'

        # Restore the venv from cache
        -   name: Restore cached virtual environment
            uses: actions/cache@v4
            with:
                path: venv
                key: venv-${{ hashFiles('setup.cfg') }}

        # Run the linting command using the cached venv
        -   name: Run flake8 linting
            run: |
                source venv/bin/activate
                flake8 src/hardtarget

        # testing
        -   name: Testing
            run: |
                source venv/bin/activate
                pytest



        